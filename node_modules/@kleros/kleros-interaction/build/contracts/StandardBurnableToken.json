{
  "contractName": "StandardBurnableToken",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610861806100206000396000f30060806040526004361061008a5763ffffffff60e060020a600035041663095ea7b3811461008f57806318160ddd146100c757806323b872dd146100ee57806342966c6814610118578063661884631461013257806370a082311461015657806379cc679014610177578063a9059cbb1461019b578063d73dd623146101bf578063dd62ed3e146101e3575b600080fd5b34801561009b57600080fd5b506100b3600160a060020a036004351660243561020a565b604080519115158252519081900360200190f35b3480156100d357600080fd5b506100dc61025e565b60408051918252519081900360200190f35b3480156100fa57600080fd5b506100b3600160a060020a0360043581169060243516604435610264565b34801561012457600080fd5b506101306004356103c7565b005b34801561013e57600080fd5b506100b3600160a060020a03600435166024356103d4565b34801561016257600080fd5b506100dc600160a060020a03600435166104b1565b34801561018357600080fd5b50610130600160a060020a03600435166024356104cc565b3480156101a757600080fd5b506100b3600160a060020a0360043516602435610562565b3480156101cb57600080fd5b506100b3600160a060020a036004351660243561062f565b3480156101ef57600080fd5b506100dc600160a060020a03600435811690602435166106b6565b336000818152600260209081526040808320600160a060020a03871680855290835281842086905581518681529151939490939092600080516020610816833981519152928290030190a350600192915050565b60015490565b600160a060020a03831660009081526020819052604081205482111561028957600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020548211156102b957600080fd5b600160a060020a03831615156102ce57600080fd5b600160a060020a0384166000908152602081905260409020546102f7908363ffffffff6106e116565b600160a060020a03808616600090815260208190526040808220939093559085168152205461032c908363ffffffff6106f316565b600160a060020a0380851660009081526020818152604080832094909455918716815260028252828120338252909152205461036e908363ffffffff6106e116565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391926000805160206107f6833981519152929181900390910190a35060019392505050565b6103d13382610706565b50565b336000908152600260209081526040808320600160a060020a038616845290915281205480831061042857336000908152600260209081526040808320600160a060020a038816845290915281205561045d565b610438818463ffffffff6106e116565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a038916808552908352928190205481519081529051929392600080516020610816833981519152929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b600160a060020a03821660009081526002602090815260408083203384529091529020548111156104fc57600080fd5b600160a060020a0382166000908152600260209081526040808320338452909152902054610530908263ffffffff6106e116565b600160a060020a038316600090815260026020908152604080832033845290915290205561055e8282610706565b5050565b3360009081526020819052604081205482111561057e57600080fd5b600160a060020a038316151561059357600080fd5b336000908152602081905260409020546105b3908363ffffffff6106e116565b3360009081526020819052604080822092909255600160a060020a038516815220546105e5908363ffffffff6106f316565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233926000805160206107f68339815191529281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610663908363ffffffff6106f316565b336000818152600260209081526040808320600160a060020a038916808552908352928190208590558051948552519193600080516020610816833981519152929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156106ed57fe5b50900390565b8181018281101561070057fe5b92915050565b600160a060020a03821660009081526020819052604090205481111561072b57600080fd5b600160a060020a038216600090815260208190526040902054610754908263ffffffff6106e116565b600160a060020a038316600090815260208190526040902055600154610780908263ffffffff6106e116565b600155604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a038516916000805160206107f68339815191529181900360200190a350505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a72305820a98dfc133a139d07e5c1f26cf44cfda0b98d42f9944f44b95b5b2584ca6a6e020029",
  "deployedBytecode": "0x60806040526004361061008a5763ffffffff60e060020a600035041663095ea7b3811461008f57806318160ddd146100c757806323b872dd146100ee57806342966c6814610118578063661884631461013257806370a082311461015657806379cc679014610177578063a9059cbb1461019b578063d73dd623146101bf578063dd62ed3e146101e3575b600080fd5b34801561009b57600080fd5b506100b3600160a060020a036004351660243561020a565b604080519115158252519081900360200190f35b3480156100d357600080fd5b506100dc61025e565b60408051918252519081900360200190f35b3480156100fa57600080fd5b506100b3600160a060020a0360043581169060243516604435610264565b34801561012457600080fd5b506101306004356103c7565b005b34801561013e57600080fd5b506100b3600160a060020a03600435166024356103d4565b34801561016257600080fd5b506100dc600160a060020a03600435166104b1565b34801561018357600080fd5b50610130600160a060020a03600435166024356104cc565b3480156101a757600080fd5b506100b3600160a060020a0360043516602435610562565b3480156101cb57600080fd5b506100b3600160a060020a036004351660243561062f565b3480156101ef57600080fd5b506100dc600160a060020a03600435811690602435166106b6565b336000818152600260209081526040808320600160a060020a03871680855290835281842086905581518681529151939490939092600080516020610816833981519152928290030190a350600192915050565b60015490565b600160a060020a03831660009081526020819052604081205482111561028957600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020548211156102b957600080fd5b600160a060020a03831615156102ce57600080fd5b600160a060020a0384166000908152602081905260409020546102f7908363ffffffff6106e116565b600160a060020a03808616600090815260208190526040808220939093559085168152205461032c908363ffffffff6106f316565b600160a060020a0380851660009081526020818152604080832094909455918716815260028252828120338252909152205461036e908363ffffffff6106e116565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391926000805160206107f6833981519152929181900390910190a35060019392505050565b6103d13382610706565b50565b336000908152600260209081526040808320600160a060020a038616845290915281205480831061042857336000908152600260209081526040808320600160a060020a038816845290915281205561045d565b610438818463ffffffff6106e116565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a038916808552908352928190205481519081529051929392600080516020610816833981519152929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b600160a060020a03821660009081526002602090815260408083203384529091529020548111156104fc57600080fd5b600160a060020a0382166000908152600260209081526040808320338452909152902054610530908263ffffffff6106e116565b600160a060020a038316600090815260026020908152604080832033845290915290205561055e8282610706565b5050565b3360009081526020819052604081205482111561057e57600080fd5b600160a060020a038316151561059357600080fd5b336000908152602081905260409020546105b3908363ffffffff6106e116565b3360009081526020819052604080822092909255600160a060020a038516815220546105e5908363ffffffff6106f316565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233926000805160206107f68339815191529281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610663908363ffffffff6106f316565b336000818152600260209081526040808320600160a060020a038916808552908352928190208590558051948552519193600080516020610816833981519152929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156106ed57fe5b50900390565b8181018281101561070057fe5b92915050565b600160a060020a03821660009081526020819052604090205481111561072b57600080fd5b600160a060020a038216600090815260208190526040902054610754908263ffffffff6106e116565b600160a060020a038316600090815260208190526040902055600154610780908263ffffffff6106e116565b600155604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a038516916000805160206107f68339815191529181900360200190a350505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a72305820a98dfc133a139d07e5c1f26cf44cfda0b98d42f9944f44b95b5b2584ca6a6e020029",
  "sourceMap": "184:678:78:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;184:678:78;;;;;;;",
  "deployedSourceMap": "184:678:78:-;;;;;;;;;-1:-1:-1;;;184:678:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:188:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1814:188:79;-1:-1:-1;;;;;1814:188:79;;;;;;;;;;;;;;;;;;;;;;;;;389:83:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:73;;;;;;;;;;;;;;;;;;;;726:470:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;726:470:79;-1:-1:-1;;;;;726:470:79;;;;;;;;;;;;353:73:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;353:73:74;;;;;;;3679:432:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3679:432:79;-1:-1:-1;;;;;3679:432:79;;;;;;;1149:99:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1149:99:73;-1:-1:-1;;;;;1149:99:73;;;;;490:370:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;490:370:78;-1:-1:-1;;;;;490:370:78;;;;;;;626:321:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;626:321:73;-1:-1:-1;;;;;626:321:73;;;;;;;2926:296:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2926:296:79;-1:-1:-1;;;;;2926:296:79;;;;;;;2321:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2321:153:79;-1:-1:-1;;;;;2321:153:79;;;;;;;;;;1814:188;1901:10;1881:4;1893:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1893:29:79;;;;;;;;;;;:38;;;1942;;;;;;;1881:4;;1893:29;;1901:10;;-1:-1:-1;;;;;;;;;;;1942:38:79;;;;;;;-1:-1:-1;1993:4:79;1814:188;;;;:::o;389:83:73:-;455:12;;389:83;:::o;726:470:79:-;-1:-1:-1;;;;;864:15:79;;832:4;864:15;;;;;;;;;;;854:25;;;846:34;;;;;;-1:-1:-1;;;;;904:14:79;;;;;;:7;:14;;;;;;;;919:10;904:26;;;;;;;;894:36;;;886:45;;;;;;-1:-1:-1;;;;;945:17:79;;;;937:26;;;;;;-1:-1:-1;;;;;988:15:79;;:8;:15;;;;;;;;;;;:27;;1008:6;988:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;970:15:79;;;:8;:15;;;;;;;;;;;:45;;;;1037:13;;;;;;;:25;;1055:6;1037:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1021:13:79;;;:8;:13;;;;;;;;;;;:41;;;;1097:14;;;;;:7;:14;;;;;1112:10;1097:26;;;;;;;:38;;1128:6;1097:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1068:14:79;;;;;;;:7;:14;;;;;;;;1083:10;1068:26;;;;;;;;:67;;;;1146:28;;;;;;;;;;;1068:14;;-1:-1:-1;;;;;;;;;;;1146:28:79;;;;;;;;;;-1:-1:-1;1187:4:79;726:470;;;;;:::o;353:73:74:-;396:25;402:10;414:6;396:5;:25::i;:::-;353:73;:::o;3679:432:79:-;3826:10;3785:4;3818:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3818:29:79;;;;;;;;;;3857:28;;;3853:165;;3903:10;3927:1;3895:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3895:29:79;;;;;;;;;:33;3853:165;;;3981:30;:8;3994:16;3981:30;:12;:30;:::i;:::-;3957:10;3949:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3949:29:79;;;;;;;;;:62;3853:165;4037:10;4059:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4028:61:79;;4059:29;;;;;;;;;;;4028:61;;;;;;;;;4037:10;-1:-1:-1;;;;;;;;;;;4028:61:79;;;;;;;;;;-1:-1:-1;4102:4:79;;3679:432;-1:-1:-1;;;3679:432:79:o;1149:99:73:-;-1:-1:-1;;;;;1227:16:73;1205:7;1227:16;;;;;;;;;;;;1149:99::o;490:370:78:-;-1:-1:-1;;;;;570:14:78;;;;;;:7;:14;;;;;;;;585:10;570:26;;;;;;;;560:36;;;552:45;;;;;;-1:-1:-1;;;;;791:14:78;;;;;;:7;:14;;;;;;;;806:10;791:26;;;;;;;;:38;;822:6;791:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;762:14:78;;;;;;:7;:14;;;;;;;;777:10;762:26;;;;;;;:67;835:20;770:5;848:6;835:5;:20::i;:::-;490:370;;:::o;626:321:73:-;728:10;689:4;719:20;;;;;;;;;;;709:30;;;701:39;;;;;;-1:-1:-1;;;;;754:17:73;;;;746:26;;;;;;811:10;802:8;:20;;;;;;;;;;;:32;;827:6;802:32;:24;:32;:::i;:::-;788:10;779:8;:20;;;;;;;;;;;:55;;;;-1:-1:-1;;;;;856:13:73;;;;;;:25;;874:6;856:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;840:13:73;;:8;:13;;;;;;;;;;;;:41;;;;892:33;;;;;;;840:13;;901:10;;-1:-1:-1;;;;;;;;;;;892:33:73;;;;;;;;;-1:-1:-1;938:4:73;626:321;;;;:::o;2926:296:79:-;3089:10;3027:4;3081:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3081:29:79;;;;;;;;;;:46;;3115:11;3081:46;:33;:46;:::i;:::-;3049:10;3041:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3041:29:79;;;;;;;;;;;;:87;;;3139:61;;;;;;3041:29;;-1:-1:-1;;;;;;;;;;;3139:61:79;;;;;;;;;;-1:-1:-1;3213:4:79;2926:296;;;;:::o;2321:153::-;-1:-1:-1;;;;;2444:15:79;;;2420:7;2444:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2321:153::o;1060:116:71:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:71;;;1060:116::o;1238:128::-;1319:7;;;1339;;;;1332:15;;;;1238:128;;;;:::o;430:438:74:-;-1:-1:-1;;;;;508:14:74;;:8;:14;;;;;;;;;;;498:24;;;490:33;;;;;;-1:-1:-1;;;;;718:14:74;;:8;:14;;;;;;;;;;;:26;;737:6;718:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;701:14:74;;:8;:14;;;;;;;;;;:43;765:12;;:24;;782:6;765:24;:16;:24;:::i;:::-;750:12;:39;800:18;;;;;;;;-1:-1:-1;;;;;800:18:74;;;;;;;;;;;;;829:34;;;;;;;;852:1;;-1:-1:-1;;;;;829:34:74;;;-1:-1:-1;;;;;;;;;;;829:34:74;;;;;;;;430:438;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./BurnableToken.sol\";\nimport \"./StandardToken.sol\";\n\n\n/**\n * @title Standard Burnable Token\n * @dev Adds burnFrom method to ERC20 implementations\n */\ncontract StandardBurnableToken is BurnableToken, StandardToken {\n\n  /**\n   * @dev Burns a specific amount of tokens from the target address and decrements allowance\n   * @param _from address The address which you want to send tokens from\n   * @param _value uint256 The amount of token to be burned\n   */\n  function burnFrom(address _from, uint256 _value) public {\n    require(_value <= allowed[_from][msg.sender]);\n    // Should https://github.com/OpenZeppelin/zeppelin-solidity/issues/707 be accepted,\n    // this function needs to emit an event with the updated approval.\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    _burn(_from, _value);\n  }\n}\n",
  "sourcePath": "openzeppelin-solidity/contracts/token/ERC20/StandardBurnableToken.sol",
  "ast": {
    "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/StandardBurnableToken.sol",
    "exportedSymbols": {
      "StandardBurnableToken": [
        32001
      ]
    },
    "id": 32002,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 31953,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:78"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "file": "./BurnableToken.sol",
        "id": 31954,
        "nodeType": "ImportDirective",
        "scope": 32002,
        "sourceUnit": 31771,
        "src": "26:29:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
        "file": "./StandardToken.sol",
        "id": 31955,
        "nodeType": "ImportDirective",
        "scope": 32002,
        "sourceUnit": 32249,
        "src": "56:29:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 31956,
              "name": "BurnableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31770,
              "src": "218:13:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BurnableToken_$31770",
                "typeString": "contract BurnableToken"
              }
            },
            "id": 31957,
            "nodeType": "InheritanceSpecifier",
            "src": "218:13:78"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 31958,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32248,
              "src": "233:13:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$32248",
                "typeString": "contract StandardToken"
              }
            },
            "id": 31959,
            "nodeType": "InheritanceSpecifier",
            "src": "233:13:78"
          }
        ],
        "contractDependencies": [
          31699,
          31770,
          31813,
          31845,
          32248
        ],
        "contractKind": "contract",
        "documentation": "@title Standard Burnable Token\n@dev Adds burnFrom method to ERC20 implementations",
        "fullyImplemented": true,
        "id": 32001,
        "linearizedBaseContracts": [
          32001,
          32248,
          31770,
          31699,
          31813,
          31845
        ],
        "name": "StandardBurnableToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 31999,
              "nodeType": "Block",
              "src": "546:314:78",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 31967,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31963,
                          "src": "560:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 31968,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32015,
                              "src": "570:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 31970,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 31969,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31961,
                              "src": "578:5:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "570:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 31973,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 31971,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32263,
                              "src": "585:3:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 31972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "585:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "570:26:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "560:36:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32266,
                        32267
                      ],
                      "referencedDeclaration": 32266,
                      "src": "552:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 31975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "552:45:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31976,
                  "nodeType": "ExpressionStatement",
                  "src": "552:45:78"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 31977,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32015,
                          "src": "762:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 31981,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 31978,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31961,
                          "src": "770:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "762:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 31982,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 31979,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32263,
                          "src": "777:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "777:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "762:26:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 31990,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31963,
                          "src": "822:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 31983,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32015,
                              "src": "791:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 31985,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 31984,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31961,
                              "src": "799:5:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "791:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 31988,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 31986,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32263,
                              "src": "806:3:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 31987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "806:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "791:26:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31492,
                        "src": "791:30:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 31991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "791:38:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "762:67:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31993,
                  "nodeType": "ExpressionStatement",
                  "src": "762:67:78"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 31995,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31961,
                        "src": "841:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 31996,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31963,
                        "src": "848:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31994,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31769,
                      "src": "835:5:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 31997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "835:20:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31998,
                  "nodeType": "ExpressionStatement",
                  "src": "835:20:78"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens from the target address and decrements allowance\n@param _from address The address which you want to send tokens from\n@param _value uint256 The amount of token to be burned",
            "id": 32000,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31961,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 32000,
                  "src": "508:13:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31963,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 32000,
                  "src": "523:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "507:31:78"
            },
            "payable": false,
            "returnParameters": {
              "id": 31965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:0:78"
            },
            "scope": 32001,
            "src": "490:370:78",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 32002,
        "src": "184:678:78"
      }
    ],
    "src": "0:863:78"
  },
  "legacyAST": {
    "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/StandardBurnableToken.sol",
    "exportedSymbols": {
      "StandardBurnableToken": [
        32001
      ]
    },
    "id": 32002,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 31953,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:78"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "file": "./BurnableToken.sol",
        "id": 31954,
        "nodeType": "ImportDirective",
        "scope": 32002,
        "sourceUnit": 31771,
        "src": "26:29:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
        "file": "./StandardToken.sol",
        "id": 31955,
        "nodeType": "ImportDirective",
        "scope": 32002,
        "sourceUnit": 32249,
        "src": "56:29:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 31956,
              "name": "BurnableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31770,
              "src": "218:13:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BurnableToken_$31770",
                "typeString": "contract BurnableToken"
              }
            },
            "id": 31957,
            "nodeType": "InheritanceSpecifier",
            "src": "218:13:78"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 31958,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32248,
              "src": "233:13:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$32248",
                "typeString": "contract StandardToken"
              }
            },
            "id": 31959,
            "nodeType": "InheritanceSpecifier",
            "src": "233:13:78"
          }
        ],
        "contractDependencies": [
          31699,
          31770,
          31813,
          31845,
          32248
        ],
        "contractKind": "contract",
        "documentation": "@title Standard Burnable Token\n@dev Adds burnFrom method to ERC20 implementations",
        "fullyImplemented": true,
        "id": 32001,
        "linearizedBaseContracts": [
          32001,
          32248,
          31770,
          31699,
          31813,
          31845
        ],
        "name": "StandardBurnableToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 31999,
              "nodeType": "Block",
              "src": "546:314:78",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 31967,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31963,
                          "src": "560:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 31968,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32015,
                              "src": "570:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 31970,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 31969,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31961,
                              "src": "578:5:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "570:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 31973,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 31971,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32263,
                              "src": "585:3:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 31972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "585:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "570:26:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "560:36:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        32266,
                        32267
                      ],
                      "referencedDeclaration": 32266,
                      "src": "552:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 31975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "552:45:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31976,
                  "nodeType": "ExpressionStatement",
                  "src": "552:45:78"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 31977,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32015,
                          "src": "762:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 31981,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 31978,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31961,
                          "src": "770:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "762:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 31982,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 31979,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32263,
                          "src": "777:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "777:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "762:26:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 31990,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31963,
                          "src": "822:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 31983,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32015,
                              "src": "791:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 31985,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 31984,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31961,
                              "src": "799:5:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "791:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 31988,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 31986,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32263,
                              "src": "806:3:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 31987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "806:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "791:26:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31492,
                        "src": "791:30:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 31991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "791:38:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "762:67:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31993,
                  "nodeType": "ExpressionStatement",
                  "src": "762:67:78"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 31995,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31961,
                        "src": "841:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 31996,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31963,
                        "src": "848:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31994,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31769,
                      "src": "835:5:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 31997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "835:20:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31998,
                  "nodeType": "ExpressionStatement",
                  "src": "835:20:78"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens from the target address and decrements allowance\n@param _from address The address which you want to send tokens from\n@param _value uint256 The amount of token to be burned",
            "id": 32000,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31961,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 32000,
                  "src": "508:13:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31963,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 32000,
                  "src": "523:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "507:31:78"
            },
            "payable": false,
            "returnParameters": {
              "id": 31965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:0:78"
            },
            "scope": 32001,
            "src": "490:370:78",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 32002,
        "src": "184:678:78"
      }
    ],
    "src": "0:863:78"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-09-17T19:22:27.226Z"
}