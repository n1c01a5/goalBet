{
  "contractName": "ArbitrableTransaction",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appeal",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "arbitratorExtraData",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyA",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "timeOutByPartyA",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "status",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyB",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "rule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyAFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyBFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "arbitrator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timeout",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "timeOutByPartyB",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastInteraction",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "payArbitrationFeeByPartyA",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputeID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "payArbitrationFeeByPartyB",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "submitEvidence",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amountOfChoices",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "name": "_timeout",
          "type": "uint256"
        },
        {
          "name": "_partyB",
          "type": "address"
        },
        {
          "name": "_arbitratorExtraData",
          "type": "bytes"
        },
        {
          "name": "_metaEvidence",
          "type": "string"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_party",
          "type": "uint8"
        }
      ],
      "name": "HasToPayFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_metaEvidenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "MetaEvidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_metaEvidenceID",
          "type": "uint256"
        }
      ],
      "name": "Dispute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_party",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "Evidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "Ruling",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amountReimbursed",
          "type": "uint256"
        }
      ],
      "name": "reimburse",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061011c5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663069fae2a81146101215780630c7ac7b61461016f57806310e1d8ca146101f957806319e2641e1461022a5780631b9265b81461023f578063200d2ed214610254578063290401131461028d578063311a6c56146102a25780634a44c2e4146102bd5780634b40c974146102d5578063512491f1146102fc5780636cc6cde11461031157806370dea79a14610326578063853c80ce1461033b5780638f71a26514610350578063a010963114610365578063aa8c217c1461036d578063b0a1e2b414610382578063b1bcce3a14610397578063bac91e2e1461039f578063ce425c80146103f8575b600080fd5b6040805160206004803580820135601f810184900484028501840190955284845261016d9436949293602493928401919081908401838280828437509497506104239650505050505050565b005b34801561017b57600080fd5b506101846105b7565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101be5781810151838201526020016101a6565b50505050905090810190601f1680156101eb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020557600080fd5b5061020e610644565b60408051600160a060020a039092168252519081900360200190f35b34801561023657600080fd5b5061016d610658565b34801561024b57600080fd5b5061016d610795565b34801561026057600080fd5b50610269610840565b6040518082600481111561027957fe5b60ff16815260200191505060405180910390f35b34801561029957600080fd5b5061020e610849565b3480156102ae57600080fd5b5061016d600435602435610858565b3480156102c957600080fd5b5061016d600435610925565b3480156102e157600080fd5b506102ea610a52565b60408051918252519081900360200190f35b34801561030857600080fd5b506102ea610a58565b34801561031d57600080fd5b5061020e610a5e565b34801561033257600080fd5b506102ea610a6d565b34801561034757600080fd5b5061016d610a73565b34801561035c57600080fd5b506102ea610ba9565b61016d610baf565b34801561037957600080fd5b506102ea610ea2565b34801561038e57600080fd5b506102ea610ea8565b61016d610eae565b3480156103ab57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261016d94369492936024939284019190819084018382808284375094975061117c9650505050505050565b34801561040457600080fd5b5061040d611376565b6040805160ff9092168252519081900360200190f35b6003546101009004600160a060020a031633148061044b5750600454600160a060020a031633145b15156104c7576040805160e560020a62461bcd02815260206004820152602960248201527f43616e206f6e6c792062652063616c6c65642062792070617274792041206f7260448201527f20706172747920422e0000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60008054600854604080517f49912f880000000000000000000000000000000000000000000000000000000081526004810183815260248201928352865160448301528651600160a060020a03909516956349912f88953495948994909260649091019160208601918190849084905b8381101561054f578181015183820152602001610537565b50505050905090810190601f16801561057c5780820380516001836020036101000a031916815260200191505b5093505050506000604051808303818588803b15801561059b57600080fd5b505af11580156105af573d6000803e3d6000fd5b505050505050565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561063c5780601f106106115761010080835404028352916020019161063c565b820191906000526020600020905b81548152906001019060200180831161061f57829003601f168201915b505050505081565b6003546101009004600160a060020a031681565b6003546101009004600160a060020a031633146106bf576040805160e560020a62461bcd02815260206004820152601e60248201527f43616e206f6e6c792062652063616c6c656420627920706172747920412e0000604482015290519081900360640190fd5b600260095460ff1660048111156106d257fe5b14610727576040805160e560020a62461bcd02815260206004820152601860248201527f4e6f742077616974696e6720666f7220706172747920422e0000000000000000604482015290519081900360640190fd5b60025460075401421015610785576040805160e560020a62461bcd02815260206004820181905260248201527f5468652074696d656f75742074696d6520686173206e6f74207061737365642e604482015290519081900360640190fd5b60085461079390600161137f565b565b6003546101009004600160a060020a031633146107fc576040805160e560020a62461bcd02815260206004820152601e60248201527f43616e206f6e6c792062652063616c6c656420627920706172747920412e0000604482015290519081900360640190fd5b600454600a54604051600160a060020a039092169181156108fc0291906000818181858888f19350505050158015610838573d6000803e3d6000fd5b506000600a55565b60095460ff1681565b600454600160a060020a031681565b600054600160a060020a031633146108e0576040805160e560020a62461bcd02815260206004820152602560248201527f43616e206f6e6c792062652063616c6c6564206279207468652061726269747260448201527f61746f722e000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b604080518281529051839133917f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e756222769181900360200190a3610921828261137f565b5050565b600454600160a060020a03163314610987576040805160e560020a62461bcd02815260206004820152601e60248201527f43616e206f6e6c792062652063616c6c656420627920706172747920422e0000604482015290519081900360640190fd5b600a54811115610a07576040805160e560020a62461bcd02815260206004820152603360248201527f43616e6e6f74207265696d627572736520616e20616d6f756e7420686967686560448201527f72207468616e20746865206465706f7369742e00000000000000000000000000606482015290519081900360840190fd5b600354604051610100909104600160a060020a0316906108fc8315029083906000818181858888f19350505050158015610a45573d6000803e3d6000fd5b50600a8054919091039055565b60055481565b60065481565b600054600160a060020a031681565b60025481565b600454600160a060020a03163314610ad5576040805160e560020a62461bcd02815260206004820152601e60248201527f43616e206f6e6c792062652063616c6c656420627920706172747920422e0000604482015290519081900360640190fd5b600160095460ff166004811115610ae857fe5b14610b3d576040805160e560020a62461bcd02815260206004820152601860248201527f4e6f742077616974696e6720666f7220706172747920412e0000000000000000604482015290519081900360640190fd5b60025460075401421015610b9b576040805160e560020a62461bcd02815260206004820181905260248201527f5468652074696d656f75742074696d6520686173206e6f74207061737365642e604482015290519081900360640190fd5b60085461079390600261137f565b60075481565b6003546000906101009004600160a060020a03163314610c19576040805160e560020a62461bcd02815260206004820152601e60248201527f43616e206f6e6c792062652063616c6c656420627920706172747920412e0000604482015290519081900360640190fd5b6000546040517ff7434ea90000000000000000000000000000000000000000000000000000000081526020600482019081526001805460026000198284161561010002019091160460248401819052600160a060020a039094169363f7434ea993919291829160449091019084908015610cd45780601f10610ca957610100808354040283529160200191610cd4565b820191906000526020600020905b815481529060010190602001808311610cb757829003601f168201915b505092505050602060405180830381600087803b158015610cf457600080fd5b505af1158015610d08573d6000803e3d6000fd5b505050506040513d6020811015610d1e57600080fd5b505160058054340190819055909150811115610daa576040805160e560020a62461bcd02815260206004820152602a60248201527f4e6f7420656e6f7567682045544820746f20636f76657220617262697472617460448201527f696f6e20636f7374732e00000000000000000000000000000000000000000000606482015290519081900360840190fd5b600360095460ff166004811115610dbd57fe5b10610e38576040805160e560020a62461bcd02815260206004820152602160248201527f446973707574652068617320616c7265616479206265656e206372656174656460448201527f2e00000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b42600755600654811115610e96576009805460ff191660021790556040517fba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e5689060019080825b60ff16815260200191505060405180910390a1610e9f565b610e9f81611405565b50565b600a5481565b60085481565b600454600090600160a060020a03163314610f13576040805160e560020a62461bcd02815260206004820152601e60248201527f43616e206f6e6c792062652063616c6c656420627920706172747920422e0000604482015290519081900360640190fd5b6000546040517ff7434ea90000000000000000000000000000000000000000000000000000000081526020600482019081526001805460026000198284161561010002019091160460248401819052600160a060020a039094169363f7434ea993919291829160449091019084908015610fce5780601f10610fa357610100808354040283529160200191610fce565b820191906000526020600020905b815481529060010190602001808311610fb157829003601f168201915b505092505050602060405180830381600087803b158015610fee57600080fd5b505af1158015611002573d6000803e3d6000fd5b505050506040513d602081101561101857600080fd5b5051600680543401908190559091508111156110a4576040805160e560020a62461bcd02815260206004820152602a60248201527f4e6f7420656e6f7567682045544820746f20636f76657220617262697472617460448201527f696f6e20636f7374732e00000000000000000000000000000000000000000000606482015290519081900360840190fd5b600360095460ff1660048111156110b757fe5b10611132576040805160e560020a62461bcd02815260206004820152602160248201527f446973707574652068617320616c7265616479206265656e206372656174656460448201527f2e00000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b42600755600554811115610e96576009805460ff191660011790556040517fba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568906000908082610e7e565b6003546101009004600160a060020a03163314806111a45750600454600160a060020a031633145b1515611220576040805160e560020a62461bcd02815260206004820152602960248201527f43616e206f6e6c792062652063616c6c65642062792070617274792041206f7260448201527f20706172747920422e0000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600360095460ff16600481111561123357fe5b10156112af576040805160e560020a62461bcd02815260206004820152602560248201527f546865206469737075746520686173206e6f74206265656e206372656174656460448201527f207965742e000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b33600160a060020a03166008546000809054906101000a9004600160a060020a0316600160a060020a03167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c846040518080602001828103825283818151815260200191508051906020019080838360005b83811015611339578181015183820152602001611321565b50505050905090810190601f1680156113665780820380516001836020036101000a031916815260200191505b509250505060405180910390a450565b60035460ff1681565b6113898282611576565b60018114156113c757600354600a54604051610100909204600160a060020a0316916108fc82150291906000818181858888f19350505050506113fc565b60028114156113fc57600454600a54604051600160a060020a039092169181156108fc0291906000818181858888f150505050505b50506000600a55565b6009805460ff191660039081179091556000549054604080517fc13517e100000000000000000000000000000000000000000000000000000000815260ff90921660048301818152602484019283526001805460026101008284161502600019019091160460448601819052600160a060020a039096169563c13517e195889592939291606490910190849080156114de5780601f106114b3576101008083540402835291602001916114de565b820191906000526020600020905b8154815290600101906020018083116114c157829003601f168201915b505093505050506020604051808303818588803b1580156114fe57600080fd5b505af1158015611512573d6000803e3d6000fd5b50505050506040513d602081101561152957600080fd5b50516008819055600080546040805192835251600160a060020a03909116917fc21357d76c2ee05713ed6e2edb9a5f60ab1e8748c56201385df30007f774f58d919081900360200190a350565b60085482146115cf576040805160e560020a62461bcd02815260206004820152601160248201527f57726f6e6720646973707574652049442e000000000000000000000000000000604482015290519081900360640190fd5b60035460ff1681111561162c576040805160e560020a62461bcd02815260206004820152600f60248201527f496e76616c69642072756c696e672e0000000000000000000000000000000000604482015290519081900360640190fd5b600181141561168b57600360019054906101000a9004600160a060020a0316600160a060020a03166108fc6006546005541161166a5760065461166e565b6005545b6040518115909202916000818181858888f19350505050506116d6565b60028114156116d657600454600654600554600160a060020a03909216916108fc91106116ba576006546116be565b6005545b6040518115909202916000818181858888f150505050505b50506009805460ff191660041790555600a165627a7a7230582004d5e85307e4f7ec89d6a2b1a8b0f02f0bd6bc4c71c685321eb112fdaffb000d0029",
  "sourceMap": "488:2281:8:-;;;1172:354;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2848:10:2;:24;;-1:-1:-1;;;;;;2848:24:2;-1:-1:-1;;;;;2848:24:2;;;;;1172:354:8;;;2882:42:2;;1172:354:8;;;;;;;;;;;;;;;;;650:1;;1172:354;;;;;;;;2882:42:2;;-1:-1:-1;;2882:42:2;;;;;:::i;:::-;-1:-1:-1;;;2764:7:32;:18;;;2792:6;:19;;2821:6;:16;;-1:-1:-1;;;;;;2821:16:32;-1:-1:-1;;;;;2821:16:32;;;;;-1:-1:-1;;;;;;2792:19:32;2801:10;2792:19;;;-1:-1:-1;;2847:34:32;;;;;;;2896:30;;;;;;;;;;;;;;;-1:-1:-1;;2896:30:32;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2896:30:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1500:6:8;:19;;1510:9;1500:19;;;-1:-1:-1;488:2281:8;;-1:-1:-1;;;;;;;;488:2281:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;488:2281:8;;;-1:-1:-1;488:2281:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "488:2281:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6945:132:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6945:132:32;;-1:-1:-1;6945:132:32;;-1:-1:-1;;;;;;;6945:132:32;;;691:32:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;691:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;691:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;879:21:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;879:21:32;;;;;;;;-1:-1:-1;;;;;879:21:32;;;;;;;;;;;;;;5737:264;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5737:264:32;;;;1635:93:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1635:93:8;;;;1246:20:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1246:20:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;906:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;906:21:32;;;;3332:182:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3332:182:2;;;;;;;1896:250:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1896:250:8;;;;;933:21:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;933:21:32;;;;;;;;;;;;;;;;;;;;994;;8:9:-1;5:2;;;30:1;27;20:12;5:2;994:21:32;;;;657:28:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;657:28:2;;;;726:19:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;726:19:32;;;;6071:264;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6071:264:32;;;;1055:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1055:27:32;;;;3293:909;;;;701:18:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;701:18:8;;;;1135:21:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1135:21:32;;;;4380:909;;;;6463:223;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6463:223:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6463:223:32;;-1:-1:-1;6463:223:32;;-1:-1:-1;;;;;;;6463:223:32;845:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;845:28:32;;;;;;;;;;;;;;;;;;;;;;;6945:132;1721:6;;;;;-1:-1:-1;;;;;1721:6:32;1707:10;:20;;:44;;-1:-1:-1;1745:6:32;;-1:-1:-1;;;;;1745:6:32;1731:10;:20;1707:44;1699:98;;;;;;;-1:-1:-1;;;;;1699:98:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7014:10;;;7049:9;;7014:56;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7014:10:32;;;;:17;;7038:9;;7049;7059:10;;7014:56;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7014:56:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7014:56:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7014:56:32;;;;;6945:132;:::o;691:32:2:-;;;;;;;;;;;;;;;-1:-1:-1;;691:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;879:21:32:-;;;;;;-1:-1:-1;;;;;879:21:32;;:::o;5737:264::-;1536:6;;;;;-1:-1:-1;;;;;1536:6:32;1522:10;:20;1514:63;;;;;-1:-1:-1;;;;;1514:63:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;5810:20;5800:6;;;;:30;;;;;;;;;5792:67;;;;;-1:-1:-1;;;;;5792:67:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;5902:7;;5884:15;;:25;5877:3;:32;;5869:77;;;;;-1:-1:-1;;;;;5869:77:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5971:9;;5957:37;;1303:1;5957:13;:37::i;:::-;5737:264::o;1635:93:8:-;1536:6:32;;;;;-1:-1:-1;;;;;1536:6:32;1522:10;:20;1514:63;;;;;-1:-1:-1;;;;;1514:63:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;1678:6:8;;1694;;1678:23;;-1:-1:-1;;;;;1678:6:8;;;;:23;;;;;1694:6;1678;:23;:6;:23;1694:6;1678;:23;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1720:1:8;1711:6;:10;1635:93::o;1246:20:32:-;;;;;;:::o;906:21::-;;;-1:-1:-1;;;;;906:21:32;;:::o;3332:182:2:-;851:10;;-1:-1:-1;;;;;851:10:2;829;:33;821:83;;;;;-1:-1:-1;;;;;821:83:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3414:49;;;;;;;;3444:10;;3432;;3414:49;;;;;;;;;3474:33;3488:10;3499:7;3474:13;:33::i;:::-;3332:182;;:::o;1896:250:8:-;1629:6:32;;-1:-1:-1;;;;;1629:6:32;1615:10;:20;1607:63;;;;;-1:-1:-1;;;;;1607:63:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;1996:6:8;;1975:27;;;1967:91;;;;;-1:-1:-1;;;;;1967:91:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2068:6;;:34;;:6;;;;-1:-1:-1;;;;;2068:6:8;;:34;;;;;;;;;;;;:6;:34;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;2112:6:8;:27;;;;;;;;1896:250::o;933:21:32:-;;;;:::o;994:::-;;;;:::o;657:28:2:-;;;-1:-1:-1;;;;;657:28:2;;:::o;726:19:32:-;;;;:::o;6071:264::-;1629:6;;-1:-1:-1;;;;;1629:6:32;1615:10;:20;1607:63;;;;;-1:-1:-1;;;;;1607:63:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;6144:20;6134:6;;;;:30;;;;;;;;;6126:67;;;;;-1:-1:-1;;;;;6126:67:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;6236:7;;6218:15;;:25;6211:3;:32;;6203:77;;;;;-1:-1:-1;;;;;6203:77:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6305:9;;6291:37;;1340:1;6291:13;:37::i;1055:27::-;;;;:::o;3293:909::-;1536:6;;3366:20;;1536:6;;;-1:-1:-1;;;;;1536:6:32;1522:10;:20;1514:63;;;;;-1:-1:-1;;;;;1514:63:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;3389:10;;:47;;;;;;;;;;;;:10;:47;;;-1:-1:-1;;3389:47:32;;;;:10;:47;;;;;;;;;;;;-1:-1:-1;;;;;3389:10:32;;;;:26;;:10;;:47;;;;;;;;:10;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3389:47:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3389:47:32;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3389:47:32;3446:9;:22;;3459:9;3446:22;;;;;3389:47;;-1:-1:-1;3499:28:32;-1:-1:-1;3499:28:32;3478:117;;;;;-1:-1:-1;;;;;3478:117:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3683:21;3674:6;;;;:30;;;;;;;;;3666:76;;;;;-1:-1:-1;;;;;3666:76:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3820:3;3802:15;:21;3950:9;;:27;-1:-1:-1;3946:250:32;;;3993:6;:29;;-1:-1:-1;;3993:29:32;4002:20;3993:29;;;4041:25;;;;3993:29;;4041:25;3993:29;4041:25;;;;;;;;;;;;;;;;;3946:250;;;4156:29;4169:15;4156:12;:29::i;:::-;3293:909;:::o;701:18:8:-;;;;:::o;1135:21:32:-;;;;:::o;4380:909::-;1629:6;;4453:20;;-1:-1:-1;;;;;1629:6:32;1615:10;:20;1607:63;;;;;-1:-1:-1;;;;;1607:63:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;4476:10;;:47;;;;;;;;;;;;:10;:47;;;-1:-1:-1;;4476:47:32;;;;:10;:47;;;;;;;;;;;;-1:-1:-1;;;;;4476:10:32;;;;:26;;:10;;:47;;;;;;;;:10;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4476:47:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4476:47:32;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4476:47:32;4533:9;:22;;4546:9;4533:22;;;;;4476:47;;-1:-1:-1;4586:28:32;-1:-1:-1;4586:28:32;4565:117;;;;;-1:-1:-1;;;;;4565:117:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4770:21;4761:6;;;;:30;;;;;;;;;4753:76;;;;;-1:-1:-1;;;;;4753:76:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4907:3;4889:15;:21;5037:9;;:27;-1:-1:-1;5033:250:32;;;5080:6;:29;;-1:-1:-1;;5080:29:32;5089:20;5080:29;;;5128:25;;;;-1:-1:-1;;5128:25:32;-1:-1:-1;5128:25:32;;6463:223;1721:6;;;;;-1:-1:-1;;;;;1721:6:32;1707:10;:20;;:44;;-1:-1:-1;1745:6:32;;-1:-1:-1;;;;;1745:6:32;1731:10;:20;1707:44;1699:98;;;;;;;-1:-1:-1;;;;;1699:98:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6550:21;6540:6;;;;:31;;;;;;;;;;6532:81;;;;;-1:-1:-1;;;;;6532:81:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6658:10;-1:-1:-1;;;;;6628:51:32;6648:9;;6637:10;;;;;;;;;-1:-1:-1;;;;;6637:10:32;-1:-1:-1;;;;;6628:51:32;;6669:9;6628:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6628:51:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6463:223;:::o;845:28::-;;;;;;:::o;2485:281:8:-;2558:39;2578:10;2589:7;2558:19;:39::i;:::-;1303:1:32;2611:21:8;;2607:131;;;2646:6;;2658;;2646:19;;:6;;;;-1:-1:-1;;;;;2646:6:8;;:19;;;;;2658:6;2646:19;;;;2658:6;2646;:19;;;;;;;;2607:131;;;1340:1:32;2684:21:8;;2680:58;;;2719:6;;2731;;2719:19;;-1:-1:-1;;;;;2719:6:8;;;;:19;;;;;2731:6;2719;:19;:6;:19;2731:6;2719;:19;;-1:-1:-1;;;;;2680:58:8;-1:-1:-1;;2758:1:8;2749:6;:10;2485:281::o;5407:254:32:-;5471:6;:30;;-1:-1:-1;;5471:30:32;5480:21;5471:30;;;;;;-1:-1:-1;5523:10:32;5572:15;;5523:85;;;;;;5572:15;;;;5523:85;;;;;;;;;;;;5471:30;5523:85;;;:10;:85;;;;;-1:-1:-1;;5523:85:32;;;;;;;;;;;-1:-1:-1;;;;;5523:10:32;;;;:24;;5554:16;;5471:30;;5523:85;;;;;;;5471:30;;5523:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5523:85:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5523:85:32;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5523:85:32;5511:9;:97;;;5631:10;;;5623:31;;;;;;;-1:-1:-1;;;;;5631:10:32;;;;5623:31;;;;;;5523:85;5623:31;;;5407:254;:::o;7416:717::-;7511:9;;7497:23;;7489:53;;;;;-1:-1:-1;;;;;7489:53:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;7571:15;;;;7560:26;;;7552:54;;;;;-1:-1:-1;;;;;7552:54:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:1;7886:21;;7882:209;;;7921:6;;;;;;;;;-1:-1:-1;;;;;7921:6:32;-1:-1:-1;;;;;7921:11:32;:58;7945:9;;7933;;:21;:45;;7969:9;;7933:45;;;7957:9;;7933:45;7921:58;;;;;;;;;;;;;;;;;;;;;;7882:209;;;1340:1;7998:21;;7994:97;;;8033:6;;8057:9;;8045;;-1:-1:-1;;;;;8033:6:32;;;;:58;;-1:-1:-1;8045:45:32;;8081:9;;8045:45;;;8069:9;;8045:45;8033:58;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7994:97:32;-1:-1:-1;;8102:6:32;:24;;-1:-1:-1;;8102:24:32;8111:15;8102:24;;;7416:717::o",
  "source": "/**\n *  @title Arbitrable Transaction\n *  @author Clément Lesaege - <clement@lesaege.com>\n *  Bug Bounties: This code hasn't undertaken a bug bounty program yet.\n */\n\n\npragma solidity ^0.4.15;\nimport \"./TwoPartyArbitrable.sol\";\n\n/** @title Arbitrable Transaction\n *  This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\n *  This can be used for buying goods, services and for paying freelancers.\n *  Party A is the payer. Party B is the payee.\n */\ncontract ArbitrableTransaction is TwoPartyArbitrable {\n    string constant RULING_OPTIONS = \"Reimburse partyA;Pay partyB\";\n    uint8 constant AMOUNT_OF_CHOICES = 2; // The number of ruling options available.\n\n    uint public amount; // Amount sent by party A.\n\n\n    /** @dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\n     *  @param _arbitrator The arbitrator of the contract.\n     *  @param _timeout Time after which a party automatically loose a dispute.\n     *  @param _partyB The recipient of the transaction.\n     *  @param _arbitratorExtraData Extra data for the arbitrator.\n     *  @param _metaEvidence Link to meta-evidence JSON.\n     */\n    constructor(\n        Arbitrator _arbitrator, \n        uint _timeout, \n        address _partyB, \n        bytes _arbitratorExtraData, \n        string _metaEvidence\n    ) \n        TwoPartyArbitrable(_arbitrator,_timeout,_partyB,AMOUNT_OF_CHOICES,_arbitratorExtraData, _metaEvidence) \n        payable \n        public \n    {\n        amount += msg.value;\n    }\n\n    /** @dev Pay the party B. To be called when the good is delivered or the service rendered.\n     */\n    function pay() public onlyPartyA {\n        partyB.transfer(amount);\n        amount = 0;\n    }\n\n    /** @dev Reimburse party A. To be called if the good or service can't be fully provided.\n     *  @param _amountReimbursed Amount to reimburse in wei.\n     */\n    function reimburse(uint _amountReimbursed) public onlyPartyB {\n        require(_amountReimbursed <= amount, \"Cannot reimburse an amount higher than the deposit.\");\n        partyA.transfer(_amountReimbursed);\n        amount -= _amountReimbursed;\n    }\n\n    /** @dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\n     *  This need to be extended by contract inheriting from it.\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\n     *  @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.\n     */\n    function executeRuling(uint _disputeID, uint _ruling) internal {\n        super.executeRuling(_disputeID,_ruling);\n        if (_ruling==PARTY_A_WINS)\n            partyA.send(amount);\n        else if (_ruling==PARTY_B_WINS)\n            partyB.send(amount);\n\n        amount = 0;\n    }\n\n}\n",
  "sourcePath": "/private/tmp/kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
  "ast": {
    "absolutePath": "/private/tmp/kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
    "exportedSymbols": {
      "ArbitrableTransaction": [
        3887
      ]
    },
    "id": 3888,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3768,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "169:24:8"
      },
      {
        "absolutePath": "/private/tmp/kleros-interaction/contracts/standard/arbitration/TwoPartyArbitrable.sol",
        "file": "./TwoPartyArbitrable.sol",
        "id": 3769,
        "nodeType": "ImportDirective",
        "scope": 3888,
        "sourceUnit": 10476,
        "src": "194:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3770,
              "name": "TwoPartyArbitrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10475,
              "src": "522:18:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TwoPartyArbitrable_$10475",
                "typeString": "contract TwoPartyArbitrable"
              }
            },
            "id": 3771,
            "nodeType": "InheritanceSpecifier",
            "src": "522:18:8"
          }
        ],
        "contractDependencies": [
          595,
          10475
        ],
        "contractKind": "contract",
        "documentation": "@title Arbitrable Transaction\n This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\n This can be used for buying goods, services and for paying freelancers.\n Party A is the payer. Party B is the payee.",
        "fullyImplemented": true,
        "id": 3887,
        "linearizedBaseContracts": [
          3887,
          10475,
          595
        ],
        "name": "ArbitrableTransaction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3774,
            "name": "RULING_OPTIONS",
            "nodeType": "VariableDeclaration",
            "scope": 3887,
            "src": "547:62:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 3772,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "547:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5265696d6275727365207061727479413b50617920706172747942",
              "id": 3773,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "580:29:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dfa08ec6588a3d8f89e09209c6c214f977ae24abc50ffbe2557bea9c98769f80",
                "typeString": "literal_string \"Reimburse partyA;Pay partyB\""
              },
              "value": "Reimburse partyA;Pay partyB"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 3777,
            "name": "AMOUNT_OF_CHOICES",
            "nodeType": "VariableDeclaration",
            "scope": 3887,
            "src": "615:36:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 3775,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "615:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 3776,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "650:1:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3779,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 3887,
            "src": "701:18:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3778,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "701:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3805,
              "nodeType": "Block",
              "src": "1490:36:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3800,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3779,
                      "src": "1500:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3801,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17723,
                        "src": "1510:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1510:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1500:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3804,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:19:8"
                }
              ]
            },
            "documentation": "@dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\n @param _arbitrator The arbitrator of the contract.\n @param _timeout Time after which a party automatically loose a dispute.\n @param _partyB The recipient of the transaction.\n @param _arbitratorExtraData Extra data for the arbitrator.\n @param _metaEvidence Link to meta-evidence JSON.",
            "id": 3806,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3792,
                    "name": "_arbitrator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3781,
                    "src": "1368:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$4021",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3793,
                    "name": "_timeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3783,
                    "src": "1380:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3794,
                    "name": "_partyB",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3785,
                    "src": "1389:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3795,
                    "name": "AMOUNT_OF_CHOICES",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3777,
                    "src": "1397:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3796,
                    "name": "_arbitratorExtraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3787,
                    "src": "1415:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3797,
                    "name": "_metaEvidence",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3789,
                    "src": "1437:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3798,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3791,
                  "name": "TwoPartyArbitrable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10475,
                  "src": "1349:18:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TwoPartyArbitrable_$10475_$",
                    "typeString": "type(contract TwoPartyArbitrable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1349:102:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3781,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "1193:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$4021",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3780,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4021,
                    "src": "1193:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$4021",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3783,
                  "name": "_timeout",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "1226:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3782,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3785,
                  "name": "_partyB",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "1250:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3787,
                  "name": "_arbitratorExtraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "1276:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3786,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1276:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3789,
                  "name": "_metaEvidence",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "1313:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3788,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1183:156:8"
            },
            "payable": true,
            "returnParameters": {
              "id": 3799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1490:0:8"
            },
            "scope": 3887,
            "src": "1172:354:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3821,
              "nodeType": "Block",
              "src": "1668:60:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3814,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3779,
                        "src": "1694:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3811,
                        "name": "partyB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10060,
                        "src": "1678:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1678:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1678:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3816,
                  "nodeType": "ExpressionStatement",
                  "src": "1678:23:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3817,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3779,
                      "src": "1711:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1720:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1711:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3820,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:10:8"
                }
              ]
            },
            "documentation": "@dev Pay the party B. To be called when the good is delivered or the service rendered.",
            "id": 3822,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3809,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3808,
                  "name": "onlyPartyA",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10097,
                  "src": "1657:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1657:10:8"
              }
            ],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1647:2:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1668:0:8"
            },
            "scope": 3887,
            "src": "1635:93:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3846,
              "nodeType": "Block",
              "src": "1957:189:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3830,
                          "name": "_amountReimbursed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3824,
                          "src": "1975:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3831,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3779,
                          "src": "1996:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1975:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f74207265696d627572736520616e20616d6f756e7420686967686572207468616e20746865206465706f7369742e",
                        "id": 3833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2004:53:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84a35ddc39e0129e9d8033c4d73a636fb74f5b300b774078fed3a9c627c5893e",
                          "typeString": "literal_string \"Cannot reimburse an amount higher than the deposit.\""
                        },
                        "value": "Cannot reimburse an amount higher than the deposit."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84a35ddc39e0129e9d8033c4d73a636fb74f5b300b774078fed3a9c627c5893e",
                          "typeString": "literal_string \"Cannot reimburse an amount higher than the deposit.\""
                        }
                      ],
                      "id": 3829,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17726,
                        17727
                      ],
                      "referencedDeclaration": 17727,
                      "src": "1967:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1967:91:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3835,
                  "nodeType": "ExpressionStatement",
                  "src": "1967:91:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3839,
                        "name": "_amountReimbursed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3824,
                        "src": "2084:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3836,
                        "name": "partyA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10058,
                        "src": "2068:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2068:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2068:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3841,
                  "nodeType": "ExpressionStatement",
                  "src": "2068:34:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3842,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3779,
                      "src": "2112:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3843,
                      "name": "_amountReimbursed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3824,
                      "src": "2122:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2112:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3845,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:27:8"
                }
              ]
            },
            "documentation": "@dev Reimburse party A. To be called if the good or service can't be fully provided.\n @param _amountReimbursed Amount to reimburse in wei.",
            "id": 3847,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3827,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3826,
                  "name": "onlyPartyB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10109,
                  "src": "1946:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1946:10:8"
              }
            ],
            "name": "reimburse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3824,
                  "name": "_amountReimbursed",
                  "nodeType": "VariableDeclaration",
                  "scope": 3847,
                  "src": "1915:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3823,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1914:24:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1957:0:8"
            },
            "scope": 3887,
            "src": "1896:250:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3885,
              "nodeType": "Block",
              "src": "2548:218:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3857,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3849,
                        "src": "2578:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3858,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3851,
                        "src": "2589:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3854,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17811,
                        "src": "2558:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ArbitrableTransaction_$3887",
                          "typeString": "contract super ArbitrableTransaction"
                        }
                      },
                      "id": 3856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeRuling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10474,
                      "src": "2558:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3860,
                  "nodeType": "ExpressionStatement",
                  "src": "2558:39:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3861,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3851,
                      "src": "2611:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3862,
                      "name": "PARTY_A_WINS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10079,
                      "src": "2620:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2611:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 3870,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3851,
                        "src": "2684:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 3871,
                        "name": "PARTY_B_WINS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10082,
                        "src": "2693:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2684:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 3879,
                    "nodeType": "IfStatement",
                    "src": "2680:58:8",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3876,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3779,
                            "src": "2731:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3873,
                            "name": "partyB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10060,
                            "src": "2719:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2719:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 3877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2719:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 3878,
                      "nodeType": "ExpressionStatement",
                      "src": "2719:19:8"
                    }
                  },
                  "id": 3880,
                  "nodeType": "IfStatement",
                  "src": "2607:131:8",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3867,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3779,
                          "src": "2658:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3864,
                          "name": "partyA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10058,
                          "src": "2646:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "send",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2646:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) returns (bool)"
                        }
                      },
                      "id": 3868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2646:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 3869,
                    "nodeType": "ExpressionStatement",
                    "src": "2646:19:8"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3881,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3779,
                      "src": "2749:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2758:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2749:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3884,
                  "nodeType": "ExpressionStatement",
                  "src": "2749:10:8"
                }
              ]
            },
            "documentation": "@dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\n This need to be extended by contract inheriting from it.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.",
            "id": 3886,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3849,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3886,
                  "src": "2508:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3848,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2508:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3851,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 3886,
                  "src": "2525:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3850,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2507:31:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2548:0:8"
            },
            "scope": 3887,
            "src": "2485:281:8",
            "stateMutability": "nonpayable",
            "superFunction": 10474,
            "visibility": "internal"
          }
        ],
        "scope": 3888,
        "src": "488:2281:8"
      }
    ],
    "src": "169:2601:8"
  },
  "legacyAST": {
    "absolutePath": "/private/tmp/kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
    "exportedSymbols": {
      "ArbitrableTransaction": [
        3887
      ]
    },
    "id": 3888,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3768,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "169:24:8"
      },
      {
        "absolutePath": "/private/tmp/kleros-interaction/contracts/standard/arbitration/TwoPartyArbitrable.sol",
        "file": "./TwoPartyArbitrable.sol",
        "id": 3769,
        "nodeType": "ImportDirective",
        "scope": 3888,
        "sourceUnit": 10476,
        "src": "194:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3770,
              "name": "TwoPartyArbitrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10475,
              "src": "522:18:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TwoPartyArbitrable_$10475",
                "typeString": "contract TwoPartyArbitrable"
              }
            },
            "id": 3771,
            "nodeType": "InheritanceSpecifier",
            "src": "522:18:8"
          }
        ],
        "contractDependencies": [
          595,
          10475
        ],
        "contractKind": "contract",
        "documentation": "@title Arbitrable Transaction\n This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\n This can be used for buying goods, services and for paying freelancers.\n Party A is the payer. Party B is the payee.",
        "fullyImplemented": true,
        "id": 3887,
        "linearizedBaseContracts": [
          3887,
          10475,
          595
        ],
        "name": "ArbitrableTransaction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3774,
            "name": "RULING_OPTIONS",
            "nodeType": "VariableDeclaration",
            "scope": 3887,
            "src": "547:62:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 3772,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "547:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5265696d6275727365207061727479413b50617920706172747942",
              "id": 3773,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "580:29:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dfa08ec6588a3d8f89e09209c6c214f977ae24abc50ffbe2557bea9c98769f80",
                "typeString": "literal_string \"Reimburse partyA;Pay partyB\""
              },
              "value": "Reimburse partyA;Pay partyB"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 3777,
            "name": "AMOUNT_OF_CHOICES",
            "nodeType": "VariableDeclaration",
            "scope": 3887,
            "src": "615:36:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 3775,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "615:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 3776,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "650:1:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3779,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 3887,
            "src": "701:18:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3778,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "701:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3805,
              "nodeType": "Block",
              "src": "1490:36:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3800,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3779,
                      "src": "1500:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3801,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17723,
                        "src": "1510:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1510:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1500:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3804,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:19:8"
                }
              ]
            },
            "documentation": "@dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\n @param _arbitrator The arbitrator of the contract.\n @param _timeout Time after which a party automatically loose a dispute.\n @param _partyB The recipient of the transaction.\n @param _arbitratorExtraData Extra data for the arbitrator.\n @param _metaEvidence Link to meta-evidence JSON.",
            "id": 3806,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3792,
                    "name": "_arbitrator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3781,
                    "src": "1368:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$4021",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3793,
                    "name": "_timeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3783,
                    "src": "1380:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3794,
                    "name": "_partyB",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3785,
                    "src": "1389:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3795,
                    "name": "AMOUNT_OF_CHOICES",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3777,
                    "src": "1397:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3796,
                    "name": "_arbitratorExtraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3787,
                    "src": "1415:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3797,
                    "name": "_metaEvidence",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3789,
                    "src": "1437:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3798,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3791,
                  "name": "TwoPartyArbitrable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10475,
                  "src": "1349:18:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TwoPartyArbitrable_$10475_$",
                    "typeString": "type(contract TwoPartyArbitrable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1349:102:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3781,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "1193:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$4021",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3780,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4021,
                    "src": "1193:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$4021",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3783,
                  "name": "_timeout",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "1226:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3782,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3785,
                  "name": "_partyB",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "1250:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3787,
                  "name": "_arbitratorExtraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "1276:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3786,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1276:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3789,
                  "name": "_metaEvidence",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "1313:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3788,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1183:156:8"
            },
            "payable": true,
            "returnParameters": {
              "id": 3799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1490:0:8"
            },
            "scope": 3887,
            "src": "1172:354:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3821,
              "nodeType": "Block",
              "src": "1668:60:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3814,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3779,
                        "src": "1694:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3811,
                        "name": "partyB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10060,
                        "src": "1678:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1678:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1678:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3816,
                  "nodeType": "ExpressionStatement",
                  "src": "1678:23:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3817,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3779,
                      "src": "1711:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1720:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1711:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3820,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:10:8"
                }
              ]
            },
            "documentation": "@dev Pay the party B. To be called when the good is delivered or the service rendered.",
            "id": 3822,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3809,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3808,
                  "name": "onlyPartyA",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10097,
                  "src": "1657:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1657:10:8"
              }
            ],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1647:2:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1668:0:8"
            },
            "scope": 3887,
            "src": "1635:93:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3846,
              "nodeType": "Block",
              "src": "1957:189:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3830,
                          "name": "_amountReimbursed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3824,
                          "src": "1975:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3831,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3779,
                          "src": "1996:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1975:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f74207265696d627572736520616e20616d6f756e7420686967686572207468616e20746865206465706f7369742e",
                        "id": 3833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2004:53:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84a35ddc39e0129e9d8033c4d73a636fb74f5b300b774078fed3a9c627c5893e",
                          "typeString": "literal_string \"Cannot reimburse an amount higher than the deposit.\""
                        },
                        "value": "Cannot reimburse an amount higher than the deposit."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84a35ddc39e0129e9d8033c4d73a636fb74f5b300b774078fed3a9c627c5893e",
                          "typeString": "literal_string \"Cannot reimburse an amount higher than the deposit.\""
                        }
                      ],
                      "id": 3829,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17726,
                        17727
                      ],
                      "referencedDeclaration": 17727,
                      "src": "1967:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1967:91:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3835,
                  "nodeType": "ExpressionStatement",
                  "src": "1967:91:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3839,
                        "name": "_amountReimbursed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3824,
                        "src": "2084:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3836,
                        "name": "partyA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10058,
                        "src": "2068:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2068:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2068:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3841,
                  "nodeType": "ExpressionStatement",
                  "src": "2068:34:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3842,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3779,
                      "src": "2112:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3843,
                      "name": "_amountReimbursed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3824,
                      "src": "2122:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2112:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3845,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:27:8"
                }
              ]
            },
            "documentation": "@dev Reimburse party A. To be called if the good or service can't be fully provided.\n @param _amountReimbursed Amount to reimburse in wei.",
            "id": 3847,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3827,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3826,
                  "name": "onlyPartyB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10109,
                  "src": "1946:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1946:10:8"
              }
            ],
            "name": "reimburse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3824,
                  "name": "_amountReimbursed",
                  "nodeType": "VariableDeclaration",
                  "scope": 3847,
                  "src": "1915:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3823,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1914:24:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1957:0:8"
            },
            "scope": 3887,
            "src": "1896:250:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3885,
              "nodeType": "Block",
              "src": "2548:218:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3857,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3849,
                        "src": "2578:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3858,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3851,
                        "src": "2589:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3854,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17811,
                        "src": "2558:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ArbitrableTransaction_$3887",
                          "typeString": "contract super ArbitrableTransaction"
                        }
                      },
                      "id": 3856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeRuling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10474,
                      "src": "2558:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3860,
                  "nodeType": "ExpressionStatement",
                  "src": "2558:39:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3861,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3851,
                      "src": "2611:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3862,
                      "name": "PARTY_A_WINS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10079,
                      "src": "2620:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2611:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 3870,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3851,
                        "src": "2684:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 3871,
                        "name": "PARTY_B_WINS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10082,
                        "src": "2693:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2684:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 3879,
                    "nodeType": "IfStatement",
                    "src": "2680:58:8",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3876,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3779,
                            "src": "2731:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3873,
                            "name": "partyB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10060,
                            "src": "2719:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2719:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 3877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2719:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 3878,
                      "nodeType": "ExpressionStatement",
                      "src": "2719:19:8"
                    }
                  },
                  "id": 3880,
                  "nodeType": "IfStatement",
                  "src": "2607:131:8",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3867,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3779,
                          "src": "2658:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3864,
                          "name": "partyA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10058,
                          "src": "2646:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "send",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2646:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) returns (bool)"
                        }
                      },
                      "id": 3868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2646:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 3869,
                    "nodeType": "ExpressionStatement",
                    "src": "2646:19:8"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3881,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3779,
                      "src": "2749:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2758:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2749:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3884,
                  "nodeType": "ExpressionStatement",
                  "src": "2749:10:8"
                }
              ]
            },
            "documentation": "@dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\n This need to be extended by contract inheriting from it.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.",
            "id": 3886,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3849,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3886,
                  "src": "2508:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3848,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2508:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3851,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 3886,
                  "src": "2525:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3850,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2507:31:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2548:0:8"
            },
            "scope": 3887,
            "src": "2485:281:8",
            "stateMutability": "nonpayable",
            "superFunction": 10474,
            "visibility": "internal"
          }
        ],
        "scope": 3888,
        "src": "488:2281:8"
      }
    ],
    "src": "169:2601:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-24T15:46:35.446Z"
}